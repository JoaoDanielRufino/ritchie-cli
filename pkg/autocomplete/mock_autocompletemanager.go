// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package autocomplete

import (
	"sync"
)

var (
	lockManagerMockHandle sync.RWMutex
)

// Ensure, that ManagerMock does implement Manager.
// If this is not the case, regenerate this file with moq.
var _ Manager = &ManagerMock{}

// ManagerMock is a mock implementation of Manager.
//
//     func TestSomethingThatUsesManager(t *testing.T) {
//
//         // make and configure a mocked Manager
//         mockedManager := &ManagerMock{
//             HandleFunc: func(args []string) (string, error) {
// 	               panic("mock out the Handle method")
//             },
//         }
//
//         // use mockedManager in code that requires Manager
//         // and then make assertions.
//
//     }
type ManagerMock struct {
	// HandleFunc mocks the Handle method.
	HandleFunc func(shellName string) (string, error)

}

// Handle calls HandleFunc.
func (mock *ManagerMock) Handle(shellName string) (string, error) {
	if mock.HandleFunc == nil {
		panic("ManagerMock.HandleFunc: method is nil but Manager.Handle was just called")
	}
	return mock.HandleFunc(shellName)
}

// HandleCalls gets all the calls that were made to Handle.
// Check the length with:
//     len(mockedManager.HandleCalls())
func (mock *ManagerMock) HandleCalls() (func(string) (string, error)) {
	return mock.Handle
}
